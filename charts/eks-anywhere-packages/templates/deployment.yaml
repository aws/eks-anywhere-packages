{{- $render := include "eks-anywhere-packages.rendertype" . }}
{{- if eq $render "controller" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eks-anywhere-packages.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "eks-anywhere-packages.labels" . | nindent 4 }}
  {{- with .Values.additionalAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "eks-anywhere-packages.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      containers:
        - name: controller
          command:
          - /package-manager
          args:
          - server
          - --verbosity=6
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          {{- with .Values.controller.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{.Values.sourceRegistry}}{{ template "template.image" .Values.controller }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: ENABLE_WEBHOOKS
              value: {{ .Values.controller.enableWebhooks | quote}}
            {{- if .Values.controller.env }}
            {{- with .Values.controller.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
            - name: HTTP_PROXY
              value: {{ .Values.proxy.HTTP_PROXY | quote}}
            - name: HTTPS_PROXY
              value: {{ .Values.proxy.HTTPS_PROXY | quote}}
            - name: NO_PROXY
              value: {{ .Values.proxy.NO_PROXY | quote}}
            - name: CLUSTER_NAME
              value: {{ .Values.clusterName | quote}}
            - name: HELM_CONFIG_HOME
              value: {{ .Values.helmConfigHome | quote}}
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.controller.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          - mountPath: "{{ .Values.helmConfigHome }}/registry"
            name: registry-mirror
            readOnly: true
          - mountPath: /tmp/ecr-token
            name: ecr-token
            readOnly: true
      initContainers:
      - name: init-job
        image: {{.Values.sourceRegistry}}{{ template "template.image" .Values.cronjob }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
          - name: ECR_TOKEN_SECRET_NAME
            value: ecr-token
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-secret
                key: AWS_SECRET_ACCESS_KEY
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: aws-secret
                key: REGION
          - name: CLUSTER_NAME
            value: {{ .Values.clusterName }}
          - name: HTTP_PROXY
            value: {{ .Values.proxy.HTTP_PROXY | quote}}
          - name: HTTPS_PROXY
            value: {{ .Values.proxy.HTTPS_PROXY | quote}}
          - name: NO_PROXY
            value: {{ .Values.proxy.NO_PROXY | quote}}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - name: registry-mirror
        secret:
          defaultMode: 420
          secretName: registry-mirror-cred
          optional: true
      - name: ecr-token
        secret:
          defaultMode: 420
          secretName: ecr-token
          optional: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
