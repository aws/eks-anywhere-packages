apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: packagebundlecontrollers.packages.eks.amazonaws.com
  labels:
    {{- include "eks-anywhere-packages.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from:  "{{ .Values.namespace }}/{{ include "eks-anywhere-packages.fullname" . }}-serving-cert"
spec:
  group: packages.eks.amazonaws.com
  names:
    kind: PackageBundleController
    listKind: PackageBundleControllerList
    plural: packagebundlecontrollers
    singular: packagebundlecontroller
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageBundleController is the Schema for the packagebundlecontrollers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageBundleControllerSpec defines the desired state of
              PackageBundleController
            properties:
              activeBundle:
                description: ActiveBundle is name of the bundle from which packages
                  should be sourced.
                type: string
              logLevel:
                description: LogLevel controls the verbosity of logging in the controller.
                format: int32
                type: integer
              source:
                description: Source of the bundle.
                properties:
                  registry:
                    description: Registry is the OCR address hosting the bundle.
                    type: string
                  repository:
                    description: Repository is the location of the bundle within the
                      OCR registry.
                    type: string
                required:
                - registry
                - repository
                type: object
              upgradeCheckInterval:
                description: "UpgradeCheckInterval is the time between upgrade checks.
                  \n The format is that of time's ParseDuration."
                type: string
            required:
            - source
            type: object
          status:
            description: PackageBundleControllerStatus defines the observed state
              of PackageBundleController
            properties:
              state:
                description: State of the bundle controller
                enum:
                - ignored
                - active
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: packagecontrollers.packages.eks.amazonaws.com
  labels:
    {{- include "eks-anywhere-packages.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from:  "{{ .Values.namespace }}/{{ include "eks-anywhere-packages.fullname" . }}-serving-cert"
spec:
  group: packages.eks.amazonaws.com
  names:
    kind: PackageController
    listKind: PackageControllerList
    plural: packagecontrollers
    singular: packagecontroller
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageController is the Schema for the packagecontrollers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageControllerSpec defines the desired state of PackageController
            properties:
              logLevel:
                description: Optional log level for packages controller
                format: int32
                type: integer
              upgradeCheckInterval:
                description: "UpgradeCheckInterval is the time between upgrade checks.
                  \n The format is that of time's ParseDuration."
                type: string
            type: object
          status:
            description: PackageControllerStatus defines the observed state of PackageController
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: packages.packages.eks.amazonaws.com
  labels:
    {{- include "eks-anywhere-packages.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from:  "{{ .Values.namespace }}/{{ include "eks-anywhere-packages.fullname" . }}-serving-cert"
spec:
  group: packages.eks.amazonaws.com
  names:
    kind: Package
    listKind: PackageList
    plural: packages
    singular: package
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.repository
      name: Repository
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.version
      name: Version
      type: string
    - jsonPath: .status.detail
      name: Detail
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Package is the Schema for the package API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageSpec defines the desired state of an package.
            properties:
              config:
                additionalProperties:
                  type: string
                description: Config for the package
                type: object
              packageName:
                description: PackageName is the name of the package as specified in
                  the bundle.
                type: string
              packageVersion:
                description: PackageVersion is a human-friendly version name or sha256
                  checksum for the package, as specified in the bundle.
                type: string
              targetNamespace:
                description: TargetNamespace where package resources will be deployed.
                type: string
            required:
            - packageName
            type: object
          status:
            description: PackageStatus defines the observed state of Package
            properties:
              detail:
                description: Detail of the state
                type: string
              source:
                description: Source associated with the installation
                properties:
                  registry:
                    type: string
                  repository:
                    type: string
                  tag:
                    type: string
                required:
                - registry
                - repository
                - tag
                type: object
              state:
                description: State of the installation
                enum:
                - initializing
                - installing
                - installed
                - updating
                - uninstalling
                type: string
              upgradesAvailable:
                description: UpgradesAvailable indicates upgraded versions in the
                  bundle.
                items:
                  description: PackageAvailableUpgrade details the package's available
                    upgrades' versions.
                  properties:
                    tag:
                      description: Tag is a specific version number or sha256 checksum
                        for the package upgrade.
                      type: string
                    version:
                      description: Version is a human-friendly version name for the
                        package upgrade.
                      type: string
                  required:
                  - tag
                  - version
                  type: object
                type: array
              version:
                description: Chart associated with the installation
                type: string
            required:
            - source
            - version
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: packagebundles.packages.eks.amazonaws.com
  labels:
    {{- include "eks-anywhere-packages.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from:  "{{ .Values.namespace }}/{{ include "eks-anywhere-packages.fullname" . }}-serving-cert"
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: {{ .Release.Name }}-eks-anywhere-packages-webhook-service
          namespace: {{ .Values.namespace }}
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
  group: packages.eks.amazonaws.com
  names:
    kind: PackageBundle
    listKind: PackageBundleList
    plural: packagebundles
    singular: packagebundle
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.kubeVersion
      name: Version
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageBundle is the Schema for the packagebundles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageBundleSpec defines the desired state of PackageBundle
            properties:
              kubeVersion:
                description: KubeVersion is the Kubernetes version to which this bundle
                  is compatible.
                type: string
              packages:
                description: Packages supported by this bundle.
                items:
                  description: BundlePackage specifies a package within a bundle.
                  properties:
                    name:
                      description: Name of the package
                      type: string
                    source:
                      description: Source location for the package (probably a helm
                        chart).
                      properties:
                        registry:
                          description: Registry in which the package is found.
                          type: string
                        repository:
                          description: Repository within the Registry where the package
                            is found.
                          type: string
                        versions:
                          description: Versions of the package supported by this bundle.
                          items:
                            description: SourceVersion describes a version of an package
                              within a repository.
                            properties:
                              name:
                                description: Name is a human-friendly description
                                  of the version, e.g. "v1.0".
                                type: string
                              tag:
                                description: Tag is a sha256 checksum value identifying
                                  the version of the package and its contents.
                                type: string
                            required:
                            - name
                            - tag
                            type: object
                          minItems: 1
                          type: array
                      required:
                      - registry
                      - repository
                      - versions
                      type: object
                  required:
                  - source
                  type: object
                type: array
            required:
            - packages
            type: object
          status:
            description: PackageBundleStatus defines the observed state of PackageBundle
            properties:
              spec:
                description: PackageBundleSpec defines the desired state of PackageBundle
                properties:
                  kubeVersion:
                    description: KubeVersion is the Kubernetes version to which this
                      bundle is compatible.
                    type: string
                  packages:
                    description: Packages supported by this bundle.
                    items:
                      description: BundlePackage specifies a package within a bundle.
                      properties:
                        name:
                          description: Name of the package
                          type: string
                        source:
                          description: Source location for the package (probably a
                            helm chart).
                          properties:
                            registry:
                              description: Registry in which the package is found.
                              type: string
                            repository:
                              description: Repository within the Registry where the
                                package is found.
                              type: string
                            versions:
                              description: Versions of the package supported by this
                                bundle.
                              items:
                                description: SourceVersion describes a version of
                                  an package within a repository.
                                properties:
                                  name:
                                    description: Name is a human-friendly description
                                      of the version, e.g. "v1.0".
                                    type: string
                                  tag:
                                    description: Tag is a sha256 checksum value identifying
                                      the version of the package and its contents.
                                    type: string
                                required:
                                - name
                                - tag
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - registry
                          - repository
                          - versions
                          type: object
                      required:
                      - source
                      type: object
                    type: array
                required:
                - packages
                type: object
              state:
                enum:
                - inactive
                - active
                - active (upgrade available)
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
